interface Config {
    name?: string;
    isStart?: boolean;
}
interface CoTools {
    sleep?: Function;
    coSwitch?: Function;
    park: Function;
}
declare type coBlock = (coTools: CoTools) => Promise<void>;
declare class Coroutine {
    private status;
    private id;
    private name;
    private coBlock;
    static getCoroutines: () => Set<Coroutine>;
    constructor(coBlock: coBlock, config?: Config);
    start: () => void;
    private run;
    private coSwitch;
    private sleep;
    private park;
}
export { Coroutine as default, Coroutine };
