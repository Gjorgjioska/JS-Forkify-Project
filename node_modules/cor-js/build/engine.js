import { EventEmitter } from 'events';
class Engine extends EventEmitter {
    constructor() {
        super();
        this.continue = () => {
            const _continue = this.continues.shift();
            if (typeof window !== 'undefined' && window.requestIdleCallback) {
                window.requestIdleCallback(_continue);
            }
            else {
                _continue();
            }
        };
        this.getCoroutines = () => {
            return this.coroutine;
        };
        this.coroutine = new Set();
        this.continues = [];
        this.on('add', (cor) => {
            this.coroutine.add(cor);
        });
        this.on('delete', (cor) => {
            this.coroutine.delete(cor);
        });
        this.on('continue', (_continue) => {
            this.continues.push(_continue);
            this.continue();
        });
    }
}
export default new Engine();
